"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};function c(t){console.log(t)}!function(o){o.fn.animateCSS=function(e,n,i){return this.each(function(){var t=o(this);n&&"function"!=typeof n||(i=n,n=0);setTimeout(function(){t.addClass("animated "+e),"hidden"==t.css("visibility")&&t.css({visibility:"visible"}),t.is(":hidden")&&t.show(),t.bind("webkitAnimationEnd animationend oAnimationEnd",function(){"function"==typeof i&&i.call(this)})},n)})}}(jQuery),$(function(){$(window).scroll(function(){300<$(this).scrollTop()?($(".go-top").addClass("expand"),$(".page-header-alpha").addClass("scroll")):($(".go-top").removeClass("expand"),$(".page-header-alpha").removeClass("scroll"))}),$(".go-top").click(function(t){t.preventDefault(),$("html, body").animate({scrollTop:0},1e3)})});var $this=$(void 0);$("html").easeScroll(),$(document).ready(function(){var n=$(".owl-carousel");function e(t,n){t.each(function(){var t=$(this),e="animated "+t.data("animation-"+n);t.addClass(e).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",function(){t.removeClass(e)})})}n.owlCarousel({loop:!0,margin:0,autoplay:!0,center:!0,navSpeed:500,nav:!1,touchDrag:!1,mouseDrag:!1,items:1}),n.on("change.owl.carousel",function(t){e($(".owl-item",n).eq(t.item.index).find("[data-animation-out]"),"out")});var i=0;n.on("changed.owl.carousel",function(t){e($(".owl-item",n).eq(t.item.index).find("[data-animation-in]"),"in")}),n.on("translated.owl.carousel",function(t){if(console.log(t.item.index,t.page.count),t.item.index==t.page.count-1)if(i<1)i++,console.log(i);else{n.trigger("stop.owl.autoplay");var e=n.data("owl.carousel");e.settings.autoplay=!1,e.options.autoplay=!1,n.trigger("refresh.owl.carousel")}})});var icon=$(".navbar-toggler");function getSlide(){var t=$(window).width();return t<601&&500<t?2:t<500?void 0:3}icon.click(function(){$(".menu-i").toggleClass("open-nav"),$("#navbarMenu").toggleClass("menu-visible")});var swiper=new Swiper(".swiper-container",{effect:"coverflow",loop:!0,centeredSlides:!0,slidesPerView:getSlide(),initialSlide:3,keyboardControl:!0,mousewheelControl:!1,pagination:".screen-pagination",preventClicks:!1,preventClicksPropagation:!1,lazyLoadingInPrevNext:!0,nextButton:".swiper-button-next",prevButton:".swiper-button-prev",coverflow:{rotate:0,stretch:0,depth:250,modifier:1,slideShadows:!0}});$("select").each(function(){var e=$(this),t=$(this).children("option").length;e.addClass("select-hidden"),e.wrap('<div class="select"></div>'),e.after('<div class="select-styled"></div>');var n=e.next("div.select-styled");n.text(e.children("option").eq(0).text());for(var i=$("<ul />",{class:"select-options"}).insertAfter(n),o=0;o<t;o++)$("<li />",{text:e.children("option").eq(o).text(),rel:e.children("option").eq(o).val()}).appendTo(i);var a=i.children("li");n.click(function(t){t.stopPropagation(),$("div.select-styled.active").not(this).each(function(){$(this).removeClass("active").next("ul.select-options").hide()}),$(this).toggleClass("active").next("ul.select-options").toggle()}),a.click(function(t){t.stopPropagation(),n.text($(this).text()).removeClass("active"),e.val($(this).attr("rel")),i.hide()}),$(document).click(function(){n.removeClass("active"),i.hide()})}),$(".navbar-nav-menu a").on("click",function(){var t=$(this).attr("data-scroll"),e=$('section[data-anchor="'+t+'"]').offset().top-28;return console.dir(e),$("body,html").animate({scrollTop:e},500),!1}),$(window).scroll(function(){var e=$(window).scrollTop();100<=e?$("main section").each(function(t){$(this).position().top<=e-20&&($(".navbar-nav-menu a.active").removeClass("active"),$(".navbar-nav-menu a").eq(t).addClass("active"))}):($(".navbar-nav-menu").removeClass("fixed"),$(".navbar-nav-menu a.active").removeClass("active"),$(".navbar-nav-menu a:first").addClass("active"))}).scroll(),function(l){var c=l.document.documentElement;function i(t,e){var n,i,o=l.pageYOffset,a=o+(n=c.clientHeight,i=l.innerHeight,n<i?i:n),s=t.offsetHeight,r=function(t){for(var e=0,n=0;isNaN(t.offsetTop)||(e+=t.offsetTop),isNaN(t.offsetLeft)||(n+=t.offsetLeft),t=t.offsetParent;);return{top:e,left:n}}(t).top;return r+s*(e=e||0)<=a&&o<=r+s}function e(t){this.options=function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}(this.defaults,t),this._init()}e.prototype={defaults:{axis:"y",distance:"25px",duration:"0.66s",delay:"0s",viewportFactor:.33},_init:function(){var n=this;this.elems=Array.prototype.slice.call(c.querySelectorAll("[data-scrollReveal]")),this.scrolled=!1,this.elems.forEach(function(t,e){n.animate(t)});l.addEventListener("scroll",function(){n.scrolled||(n.scrolled=!0,setTimeout(function(){n._scrollPage()},60))},!1),l.addEventListener("resize",function(){n.resizeTimeout&&clearTimeout(n.resizeTimeout),n.resizeTimeout=setTimeout(function(){n._scrollPage(),n.resizeTimeout=null},200)},!1)},_scrollPage:function(){var n=this;this.elems.forEach(function(t,e){i(t,n.options.viewportFactor)&&n.animate(t)}),this.scrolled=!1},parseLanguage:function(t){var n,i,o,a=t.getAttribute("data-scrollreveal").split(/[, ]+/),s={};return i=[],o=["from","the","and","then","but"],a.forEach(function(t,e){-1<o.indexOf(t)||i.push(t)}),(a=i).forEach(function(t,e){switch(t){case"enter":return"top"!=(n=a[e+1])&&"bottom"!=n||(s.axis="y"),void("left"!=n&&"right"!=n||(s.axis="x"));case"after":case"wait":return void(s.delay=a[e+1]);case"move":return void(s.distance=a[e+1]);case"over":return void(s.duration=a[e+1]);case"trigger":return void(s.eventName=a[e+1]);default:return}}),"top"!=n&&"left"!=n||("undefined"==!_typeof(s.distance)?s.distance="-"+s.distance:s.distance="-"+this.options.distance),s},genCSS:function(t,e){var n=this.parseLanguage(t),i=n.distance||this.options.distance,o=n.duration||this.options.duration,a=n.delay||this.options.delay;return{transition:"-webkit-transition: all "+o+" ease "+a+";-moz-transition: all "+o+" ease "+a+";-o-transition: all "+o+" ease "+a+";transition: all "+o+" ease "+a+";",initial:"-webkit-transform: translate"+(e=n.axis||this.options.axis)+"("+i+");-moz-transform: translate"+e+"("+i+");transform: translate"+e+"("+i+");opacity: 0;",target:"-webkit-transform: translate"+e+"(0);-moz-transform: translate"+e+"(0);transform: translate"+e+"(0);opacity: 1;",totalDuration:1e3*(parseFloat(o)+parseFloat(a))}},animate:function(t){var e=this.genCSS(t);t.getAttribute("data-sr-init")||(t.setAttribute("style",e.initial),t.setAttribute("data-sr-init",!0)),t.getAttribute("data-sr-complete")||i(t,this.options.viewportFactor)&&(t.setAttribute("style",e.target+e.transition),setTimeout(function(){t.removeAttribute("style"),t.setAttribute("data-sr-complete",!0)},e.totalDuration))}},document.addEventListener("DOMContentLoaded",function(t){l.scrollReveal=new e})}(window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
