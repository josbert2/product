"use strict";var _typeof2="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};function c(t){console.log(t)}!function(n){n.fn.animateCSS=function(e,i,s){return this.each(function(){var t=n(this);i&&"function"!=typeof i||(s=i,i=0);setTimeout(function(){t.addClass("animated "+e),"hidden"==t.css("visibility")&&t.css({visibility:"visible"}),t.is(":hidden")&&t.show(),t.bind("webkitAnimationEnd animationend oAnimationEnd",function(){"function"==typeof s&&s.call(this)})},i)})}}(jQuery),$(function(){$(window).scroll(function(){300<$(this).scrollTop()?($(".go-top").addClass("expand"),$(".page-header-alpha").addClass("scroll")):($(".go-top").removeClass("expand"),$(".page-header-alpha").removeClass("scroll"))}),$(".go-top").click(function(t){t.preventDefault(),$("html, body").animate({scrollTop:0},1e3)})});var $this=$(void 0);$("html").easeScroll(),$(document).ready(function(){var i=$(".owl-carousel");function e(t,i){t.each(function(){var t=$(this),e="animated "+t.data("animation-"+i);t.addClass(e).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",function(){t.removeClass(e)})})}i.owlCarousel({loop:!0,margin:0,autoplay:!0,center:!0,navSpeed:500,nav:!1,touchDrag:!1,mouseDrag:!1,items:1}),i.on("change.owl.carousel",function(t){e($(".owl-item",i).eq(t.item.index).find("[data-animation-out]"),"out")});var s=0;i.on("changed.owl.carousel",function(t){e($(".owl-item",i).eq(t.item.index).find("[data-animation-in]"),"in")}),i.on("translated.owl.carousel",function(t){if(console.log(t.item.index,t.page.count),t.item.index==t.page.count-1)if(s<1)s++,console.log(s);else{i.trigger("stop.owl.autoplay");var e=i.data("owl.carousel");e.settings.autoplay=!1,e.options.autoplay=!1,i.trigger("refresh.owl.carousel")}})});var icon=$(".navbar-toggler");function getSlide(){var t=$(window).width();return t<601&&500<t?2:t<500?void 0:3}icon.click(function(){$(".menu-i").toggleClass("open-nav"),$("#navbarMenu").toggleClass("menu-visible")});var swiper=new Swiper(".swiper-container",{effect:"coverflow",loop:!0,centeredSlides:!0,slidesPerView:getSlide(),initialSlide:3,keyboardControl:!0,mousewheelControl:!1,pagination:".screen-pagination",preventClicks:!1,preventClicksPropagation:!1,lazyLoadingInPrevNext:!0,nextButton:".swiper-button-next",prevButton:".swiper-button-prev",coverflow:{rotate:0,stretch:0,depth:250,modifier:1,slideShadows:!0}});$(document).ready(function(){var t=navigator.userAgent.toLowerCase();navigator.userAgent.toLowerCase().indexOf("safari");-1!=t.indexOf("safari")?-1<t.indexOf("chrome")&&$(".js-tilt").tilt({glare:!0,maxGlare:.5,scale:1.1}):$(".js-tilt").tilt({glare:!0,maxGlare:.5,scale:1.1})}),$("select").each(function(){var e=$(this),t=$(this).children("option").length;e.addClass("select-hidden"),e.wrap('<div class="select"></div>'),e.after('<div class="select-styled"></div>');var i=e.next("div.select-styled");i.text(e.children("option").eq(0).text());for(var s=$("<ul />",{class:"select-options"}).insertAfter(i),n=0;n<t;n++)$("<li />",{text:e.children("option").eq(n).text(),rel:e.children("option").eq(n).val()}).appendTo(s);var a=s.children("li");i.click(function(t){t.stopPropagation(),$("div.select-styled.active").not(this).each(function(){$(this).removeClass("active").next("ul.select-options").hide()}),$(this).toggleClass("active").next("ul.select-options").toggle()}),a.click(function(t){t.stopPropagation(),i.text($(this).text()).removeClass("active"),e.val($(this).attr("rel")),s.hide()}),$(document).click(function(){i.removeClass("active"),s.hide()})}),$(".navbar-nav-menu a").on("click",function(){var t=$(this).attr("data-scroll"),e=$('section[data-anchor="'+t+'"]').offset().top-48;return console.dir(e),$("body,html").animate({scrollTop:e},500),!1}),$(".mouse-whell").on("click",function(){$("body,html").animate({scrollTop:700},500)}),$(".nav-footer-f a").on("click",function(){var t=$(this).attr("data-scroll-f"),e=$('section[data-anchor="'+t+'"]').offset().top-48;return console.dir(e),$("body,html").animate({scrollTop:e},500),!1}),$(window).scroll(function(){var e=$(window).scrollTop();100<=e?$("main section").each(function(t){$(this).position().top<=e-150&&($(".navbar-nav-menu a.active").removeClass("active"),$(".navbar-nav-menu a").eq(t).addClass("active"))}):($(".navbar-nav-menu").removeClass("fixed"),$(".navbar-nav-menu a.active").removeClass("active"),$(".navbar-nav-menu a:first").addClass("active"))}).scroll();var _typeof="function"==typeof Symbol&&"symbol"==_typeof2(Symbol.iterator)?function(t){return void 0===t?"undefined":_typeof2(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":void 0===t?"undefined":_typeof2(t)};!function(i){"function"==typeof define&&define.amd?define(["jquery"],i):"object"===("undefined"==typeof module?"undefined":_typeof(module))&&module.exports?module.exports=function(t,e){return void 0===e&&(e="undefined"!=typeof window?require("jquery"):require("jquery")(t)),i(e),e}:i(jQuery)}(function(d){return d.fn.tilt=function(e){var i=function(){this.ticking||(requestAnimationFrame(t.bind(this)),this.ticking=!0)},s=function(){var t=this;void 0!==this.timeout&&clearTimeout(this.timeout),d(this).css({transition:this.settings.speed+"ms "+this.settings.easing}),this.settings.glare&&this.glareElement.css({transition:"opacity "+this.settings.speed+"ms "+this.settings.easing}),this.timeout=setTimeout(function(){d(t).css({transition:""}),t.settings.glare&&t.glareElement.css({transition:""})},this.settings.speed)},n=function(t){this.ticking=!1,d(this).css({"will-change":"transform"}),s.call(this),d(this).trigger("tilt.mouseEnter")},a=function(t){return void 0===t&&(t={pageX:d(this).offset().left+d(this).outerWidth()/2,pageY:d(this).offset().top+d(this).outerHeight()/2}),{x:t.pageX,y:t.pageY}},o=function(t){this.mousePositions=a(t),i.call(this)},r=function(){s.call(this),this.reset=!0,i.call(this),d(this).trigger("tilt.mouseLeave")},l=function(){var t=d(this).outerWidth(),e=d(this).outerHeight(),i=d(this).offset().left,s=d(this).offset().top,n=(this.mousePositions.x-i)/t,a=(this.mousePositions.y-s)/e,o=(this.settings.maxTilt/2-n*this.settings.maxTilt).toFixed(2),r=(a*this.settings.maxTilt-this.settings.maxTilt/2).toFixed(2),l=Math.atan2(this.mousePositions.x-(i+t/2),-(this.mousePositions.y-(s+e/2)))*(180/Math.PI);return{tiltX:o,tiltY:r,percentageX:100*n,percentageY:100*a,angle:l}},t=function(){return this.transforms=l.call(this),this.reset?(this.reset=!1,d(this).css("transform","perspective("+this.settings.perspective+"px) rotateX(0deg) rotateY(0deg)"),void(this.settings.glare&&(this.glareElement.css("transform","rotate(180deg) translate(-50%, -50%)"),this.glareElement.css("opacity","0")))):(d(this).css("transform","perspective("+this.settings.perspective+"px) rotateX("+("x"===this.settings.disableAxis?0:this.transforms.tiltY)+"deg) rotateY("+("y"===this.settings.disableAxis?0:this.transforms.tiltX)+"deg) scale3d("+this.settings.scale+","+this.settings.scale+","+this.settings.scale+")"),this.settings.glare&&(this.glareElement.css("transform","rotate("+this.transforms.angle+"deg) translate(-50%, -50%)"),this.glareElement.css("opacity",""+this.transforms.percentageY*this.settings.maxGlare/100)),d(this).trigger("change",[this.transforms]),void(this.ticking=!1))},c=function(){this.glareElement.css({width:""+2*d(this).outerWidth(),height:""+2*d(this).outerWidth()})};return d.fn.tilt.destroy=function(){d(this).each(function(){d(this).find(".js-tilt-glare").remove(),d(this).css({"will-change":"",transform:""}),d(this).off("mousemove mouseenter mouseleave")})},d.fn.tilt.getValues=function(){var t=[];return d(this).each(function(){this.mousePositions=a.call(this),t.push(l.call(this))}),t},d.fn.tilt.reset=function(){d(this).each(function(){var t=this;this.mousePositions=a.call(this),this.settings=d(this).data("settings"),r.call(this),setTimeout(function(){t.reset=!1},this.settings.transition)})},this.each(function(){var t=this;this.settings=d.extend({maxTilt:d(this).is("[data-tilt-max]")?d(this).data("tilt-max"):20,perspective:d(this).is("[data-tilt-perspective]")?d(this).data("tilt-perspective"):300,easing:d(this).is("[data-tilt-easing]")?d(this).data("tilt-easing"):"cubic-bezier(.03,.98,.52,.99)",scale:d(this).is("[data-tilt-scale]")?d(this).data("tilt-scale"):"1",speed:d(this).is("[data-tilt-speed]")?d(this).data("tilt-speed"):"400",transition:!d(this).is("[data-tilt-transition]")||d(this).data("tilt-transition"),disableAxis:d(this).is("[data-tilt-disable-axis]")?d(this).data("tilt-disable-axis"):null,axis:d(this).is("[data-tilt-axis]")?d(this).data("tilt-axis"):null,reset:!d(this).is("[data-tilt-reset]")||d(this).data("tilt-reset"),glare:!!d(this).is("[data-tilt-glare]")&&d(this).data("tilt-glare"),maxGlare:d(this).is("[data-tilt-maxglare]")?d(this).data("tilt-maxglare"):1},e),null!==this.settings.axis&&(console.warn("Tilt.js: the axis setting has been renamed to disableAxis. See https://github.com/gijsroge/tilt.js/pull/26 for more information"),this.settings.disableAxis=this.settings.axis),this.init=function(){d(t).data("settings",t.settings),t.settings.glare&&function(){var t=this.settings.glarePrerender;t||d(this).append('<div class="js-tilt-glare"><div class="js-tilt-glare-inner"></div></div>'),this.glareElementWrapper=d(this).find(".js-tilt-glare"),this.glareElement=d(this).find(".js-tilt-glare-inner"),t||(this.glareElementWrapper.css({position:"absolute",top:"0",left:"0",width:"100%",height:"100%"}).css({overflow:"hidden","pointer-events":"none"}),this.glareElement.css({position:"absolute",top:"50%",left:"50%","background-image":"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)",width:""+2*d(this).outerWidth(),height:""+2*d(this).outerWidth(),transform:"rotate(180deg) translate(-50%, -50%)","transform-origin":"0% 0%",opacity:"0"}))}.call(t),function(){d(this).on("mousemove",o),d(this).on("mouseenter",n),this.settings.reset&&d(this).on("mouseleave",r),this.settings.glare&&d(window).on("resize",c.bind(this))}.call(t)},this.init()})},d("[data-tilt]").tilt(),!0}),function(l){var c=l.document.documentElement;function s(t,e){var i,s,n=l.pageYOffset,a=n+(i=c.clientHeight,s=l.innerHeight,i<s?s:i),o=t.offsetHeight,r=function(t){for(var e=0,i=0;isNaN(t.offsetTop)||(e+=t.offsetTop),isNaN(t.offsetLeft)||(i+=t.offsetLeft),t=t.offsetParent;);return{top:e,left:i}}(t).top;return r+o*(e=e||0)<=a&&n<=r+o}function e(t){this.options=function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i]);return t}(this.defaults,t),this._init()}e.prototype={defaults:{axis:"y",distance:"25px",duration:"0.66s",delay:"0s",viewportFactor:.33},_init:function(){var i=this;this.elems=Array.prototype.slice.call(c.querySelectorAll("[data-scrollReveal]")),this.scrolled=!1,this.elems.forEach(function(t,e){i.animate(t)});l.addEventListener("scroll",function(){i.scrolled||(i.scrolled=!0,setTimeout(function(){i._scrollPage()},60))},!1),l.addEventListener("resize",function(){i.resizeTimeout&&clearTimeout(i.resizeTimeout),i.resizeTimeout=setTimeout(function(){i._scrollPage(),i.resizeTimeout=null},200)},!1)},_scrollPage:function(){var i=this;this.elems.forEach(function(t,e){s(t,i.options.viewportFactor)&&i.animate(t)}),this.scrolled=!1},parseLanguage:function(t){var i,s,n,a=t.getAttribute("data-scrollreveal").split(/[, ]+/),o={};return s=[],n=["from","the","and","then","but"],a.forEach(function(t,e){-1<n.indexOf(t)||s.push(t)}),(a=s).forEach(function(t,e){switch(t){case"enter":return"top"!=(i=a[e+1])&&"bottom"!=i||(o.axis="y"),void("left"!=i&&"right"!=i||(o.axis="x"));case"after":case"wait":return void(o.delay=a[e+1]);case"move":return void(o.distance=a[e+1]);case"over":return void(o.duration=a[e+1]);case"trigger":return void(o.eventName=a[e+1]);default:return}}),"top"!=i&&"left"!=i||("undefined"==!_typeof2(o.distance)?o.distance="-"+o.distance:o.distance="-"+this.options.distance),o},genCSS:function(t,e){var i=this.parseLanguage(t),s=i.distance||this.options.distance,n=i.duration||this.options.duration,a=i.delay||this.options.delay;return{transition:"-webkit-transition: all "+n+" ease "+a+";-moz-transition: all "+n+" ease "+a+";-o-transition: all "+n+" ease "+a+";transition: all "+n+" ease "+a+";",initial:"-webkit-transform: translate"+(e=i.axis||this.options.axis)+"("+s+");-moz-transform: translate"+e+"("+s+");transform: translate"+e+"("+s+");opacity: 0;",target:"-webkit-transform: translate"+e+"(0);-moz-transform: translate"+e+"(0);transform: translate"+e+"(0);opacity: 1;",totalDuration:1e3*(parseFloat(n)+parseFloat(a))}},animate:function(t){var e=this.genCSS(t);t.getAttribute("data-sr-init")||(t.setAttribute("style",e.initial),t.setAttribute("data-sr-init",!0)),t.getAttribute("data-sr-complete")||s(t,this.options.viewportFactor)&&(t.setAttribute("style",e.target+e.transition),setTimeout(function(){t.removeAttribute("style"),t.setAttribute("data-sr-complete",!0)},e.totalDuration))}},document.addEventListener("DOMContentLoaded",function(t){l.scrollReveal=new e})}(window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
