"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};function c(t){console.log(t)}!function(o){o.fn.animateCSS=function(e,i,n){return this.each(function(){var t=o(this);i&&"function"!=typeof i||(n=i,i=0);setTimeout(function(){t.addClass("animated "+e),"hidden"==t.css("visibility")&&t.css({visibility:"visible"}),t.is(":hidden")&&t.show(),t.bind("webkitAnimationEnd animationend oAnimationEnd",function(){"function"==typeof n&&n.call(this)})},i)})}}(jQuery),$(function(){$(window).scroll(function(){300<$(this).scrollTop()?($(".go-top").addClass("expand"),$(".page-header-alpha").addClass("scroll")):($(".go-top").removeClass("expand"),$(".page-header-alpha").removeClass("scroll"))}),$(".go-top").click(function(t){t.preventDefault(),$("html, body").animate({scrollTop:0},1e3)})});var $this=$(void 0);$("html").easeScroll(),$(document).ready(function(){var i=$(".owl-carousel");function e(t,i){t.each(function(){var t=$(this),e="animated "+t.data("animation-"+i);t.addClass(e).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",function(){t.removeClass(e)})})}i.owlCarousel({loop:!1,margin:0,center:!0,navSpeed:500,nav:!0,touchDrag:!1,mouseDrag:!1,rewind:!0,items:1}),i.on("change.owl.carousel",function(t){e($(".owl-item",i).eq(t.item.index).find("[data-animation-out]"),"out")});var n=0;i.on("changed.owl.carousel",function(t){e($(".owl-item",i).eq(t.item.index).find("[data-animation-in]"),"in")}),i.on("translated.owl.carousel",function(t){if(console.log(t.item.index,t.page.count),t.item.index==t.page.count-1)if(n<1)n++,console.log(n);else{i.trigger("stop.owl.autoplay");var e=i.data("owl.carousel");e.settings.autoplay=!1,e.options.autoplay=!1,i.trigger("refresh.owl.carousel")}})});var icon=$(".navbar-toggler");function getSlide(){return $(window).width()<601?1:3}icon.click(function(){$(".menu-i").toggleClass("open-nav"),$("#navbarMenu").toggleClass("menu-visible")});var swiper=new Swiper(".swiper-container",{effect:"coverflow",loop:!0,centeredSlides:!0,slidesPerView:getSlide(),initialSlide:3,keyboardControl:!0,mousewheelControl:!1,pagination:".screen-pagination",preventClicks:!1,preventClicksPropagation:!1,lazyLoadingInPrevNext:!0,nextButton:".swiper-button-next",prevButton:".swiper-button-prev",coverflow:{rotate:0,stretch:0,depth:250,modifier:1,slideShadows:!0}});$("select").each(function(){var e=$(this),t=$(this).children("option").length;e.addClass("select-hidden"),e.wrap('<div class="select"></div>'),e.after('<div class="select-styled"></div>');var i=e.next("div.select-styled");i.text(e.children("option").eq(0).text());for(var n=$("<ul />",{class:"select-options"}).insertAfter(i),o=0;o<t;o++)$("<li />",{text:e.children("option").eq(o).text(),rel:e.children("option").eq(o).val()}).appendTo(n);var a=n.children("li");i.click(function(t){t.stopPropagation(),$("div.select-styled.active").not(this).each(function(){$(this).removeClass("active").next("ul.select-options").hide()}),$(this).toggleClass("active").next("ul.select-options").toggle()}),a.click(function(t){t.stopPropagation(),i.text($(this).text()).removeClass("active"),e.val($(this).attr("rel")),n.hide()}),$(document).click(function(){i.removeClass("active"),n.hide()})}),function(l){var c=l.document.documentElement;function n(t,e){var i,n,o=l.pageYOffset,a=o+(i=c.clientHeight,n=l.innerHeight,i<n?n:i),s=t.offsetHeight,r=function(t){for(var e=0,i=0;isNaN(t.offsetTop)||(e+=t.offsetTop),isNaN(t.offsetLeft)||(i+=t.offsetLeft),t=t.offsetParent;);return{top:e,left:i}}(t).top;return r+s*(e=e||0)<=a&&o<=r+s}function e(t){this.options=function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i]);return t}(this.defaults,t),this._init()}e.prototype={defaults:{axis:"y",distance:"25px",duration:"0.66s",delay:"0s",viewportFactor:.33},_init:function(){var i=this;this.elems=Array.prototype.slice.call(c.querySelectorAll("[data-scrollReveal]")),this.scrolled=!1,this.elems.forEach(function(t,e){i.animate(t)});l.addEventListener("scroll",function(){i.scrolled||(i.scrolled=!0,setTimeout(function(){i._scrollPage()},60))},!1),l.addEventListener("resize",function(){i.resizeTimeout&&clearTimeout(i.resizeTimeout),i.resizeTimeout=setTimeout(function(){i._scrollPage(),i.resizeTimeout=null},200)},!1)},_scrollPage:function(){var i=this;this.elems.forEach(function(t,e){n(t,i.options.viewportFactor)&&i.animate(t)}),this.scrolled=!1},parseLanguage:function(t){var i,n,o,a=t.getAttribute("data-scrollreveal").split(/[, ]+/),s={};return n=[],o=["from","the","and","then","but"],a.forEach(function(t,e){-1<o.indexOf(t)||n.push(t)}),(a=n).forEach(function(t,e){switch(t){case"enter":return"top"!=(i=a[e+1])&&"bottom"!=i||(s.axis="y"),void("left"!=i&&"right"!=i||(s.axis="x"));case"after":case"wait":return void(s.delay=a[e+1]);case"move":return void(s.distance=a[e+1]);case"over":return void(s.duration=a[e+1]);case"trigger":return void(s.eventName=a[e+1]);default:return}}),"top"!=i&&"left"!=i||("undefined"==!_typeof(s.distance)?s.distance="-"+s.distance:s.distance="-"+this.options.distance),s},genCSS:function(t,e){var i=this.parseLanguage(t),n=i.distance||this.options.distance,o=i.duration||this.options.duration,a=i.delay||this.options.delay;return{transition:"-webkit-transition: all "+o+" ease "+a+";-moz-transition: all "+o+" ease "+a+";-o-transition: all "+o+" ease "+a+";transition: all "+o+" ease "+a+";",initial:"-webkit-transform: translate"+(e=i.axis||this.options.axis)+"("+n+");-moz-transform: translate"+e+"("+n+");transform: translate"+e+"("+n+");opacity: 0;",target:"-webkit-transform: translate"+e+"(0);-moz-transform: translate"+e+"(0);transform: translate"+e+"(0);opacity: 1;",totalDuration:1e3*(parseFloat(o)+parseFloat(a))}},animate:function(t){var e=this.genCSS(t);t.getAttribute("data-sr-init")||(t.setAttribute("style",e.initial),t.setAttribute("data-sr-init",!0)),t.getAttribute("data-sr-complete")||n(t,this.options.viewportFactor)&&(t.setAttribute("style",e.target+e.transition),setTimeout(function(){t.removeAttribute("style"),t.setAttribute("data-sr-complete",!0)},e.totalDuration))}},document.addEventListener("DOMContentLoaded",function(t){l.scrollReveal=new e})}(window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
